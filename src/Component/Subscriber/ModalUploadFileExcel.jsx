import { Modal, ScrollArea } from "@mantine/core";
import { useForm, Controller } from "react-hook-form";
import React, { useState, useEffect } from "react";
import UploadFileSubscriber from "./UploadFileSubscriber";
import { hideLoading, padNumber, showLoading } from "../../Utils/Utils";
import { all } from "axios";
import atob from "atob";
import * as XLSX from "xlsx";
import { template } from "lodash";
import ModelFail from "../Control/Modal/ModalFail";
import { message } from "antd";

export default function ModalUploadFileExcel(props) {
  const {
    // register,
    handleSubmit,
    resetField,
    setValue,
    control,
    formState: { errors },
  } = useForm();

  const {
    editStatus,
    onCloseModal,
    listData,
    allowcatedExcelFileList,
    setAllowcatedEnergyList,
    setAllowcatesExcelfileList,
    buttonTypeColor = "primary",
    yearStart,
    yearEnd,
    setIsShowFailModal,
    setMessageFailModal
  } = props;
  const [tumbFile, setTumbFile] = useState([]);
  

  const [templateFile, setTemplateFile] = useState({
    binary:
      "",
    guid: "b8e5d0e0-61be-4a0d-9aab-a041622f387e",
    name: "Template ContractEnergyAmount.xls",
    type: "application/vnd.ms-excel",
  });

  function downloadTemplateFile() {
    const base64Content = templateFile.binary//.split(",")[1];
    const binaryString = atob(base64Content);
    const binaryLength = binaryString.length;
    const bytes = new Uint8Array(binaryLength);

    for (let i = 0; i < binaryLength; i++) {
      bytes[i] = binaryString.charCodeAt(i);
    }

    const blob = new Blob([bytes], { type: templateFile.type });
    const link = document.createElement("a");
    link.href = URL.createObjectURL(blob);
    link.download = templateFile.name;
    link.click();
    URL.revokeObjectURL(link.href);
  }

  console.log("Tumb File", tumbFile);
  const copytoMainFile = () => {
    console.log("FIle in Tumb to Main", allowcatedExcelFileList);
    setTumbFile([]);
    console.log(tumbFile);
  };

  const onClickCloseModal = () => {
    setTumbFile([]);
    onCloseModal();
  };

  const onClickOk = () => {
    console.log("Tumb File", tumbFile);
    console.log("function Ok in Modal");
    console.log("Tumb In UseEffect", tumbFile);
    console.log(tumbFile[0]?.guid);
    setAllowcatedEnergyList([])
    setAllowcatesExcelfileList((prevFileList) => {
      console.log("prevFileList", prevFileList);
      let newFileList = [
        {
          guid: tumbFile[0]?.guid,
          name: tumbFile[0]?.name,
          size: tumbFile[0]?.size,
          type: tumbFile[0]?.type,
          binary: tumbFile[0]?.binary,
        },
      ];
      return newFileList;
    });
    //copytoMainFile()
    console.log(allowcatedExcelFileList);
    //console.log(allowcatedExcelFileList[0].guid)
    //let base64String = allowcatedExcelFileList[0].binary;

    // Remove the header if present (e.g., 'data:application/vnd.ms-excel;base64,')
    const base64Content = tumbFile[0].binary//.split(",")[1];

    // Decode the base64 string to binary
    const binaryString = atob(base64Content);

    // Convert binary string to array buffer
    const len = binaryString.length;
    const bytes = new Uint8Array(len);
    for (let i = 0; i < len; i++) {
      bytes[i] = binaryString.charCodeAt(i);
    }

    // Convert array buffer to a binary string
    const arrayBuffer = bytes.buffer;

    // Read the Excel file using XLSX
    const workbook = XLSX.read(arrayBuffer, { type: "array" });

    // Access data from the first sheet
    const firstSheetName = workbook.SheetNames[0];
    const worksheet = workbook.Sheets[firstSheetName];
    const sheetData = XLSX.utils.sheet_to_json(worksheet, { header: 1 });

    // Log the sheet data
    //console.log(sheetData);
    checkCreate(sheetData)
    if (sheetData.length >= 3) {
      if(sheetData[1]?.[1] === "Year"||sheetData[1]?.[1] === "Year (A.D.)"){
        const filterYearSheet = sheetData.filter((items) => items[1] > 2100)
        const filterYearSheetEmpty = sheetData.filter((items) => items[1] === undefined)
        if(filterYearSheetEmpty.length === 0){
            if(filterYearSheet.length === 0){
              for(let i = 0;i < sheetData.length;i++){
                if(i>=2){
                  const filterDuplicate = sheetData.filter((items)=>items[1] === sheetData[i]?.[1])
                  if(filterDuplicate.length === 1){
                    if (listData.length === 0) {
                      console.log("Add new");
                      console.log("Items : ",sheetData[i]?.[2])
                      setAllowcatedEnergyList((prevEnergyList) => {
                        console.log("prevFileList", prevEnergyList);
                        let newFileList = [
                          ...prevEnergyList,
                          {
                            
                            allocateType: "CUSTOM",
                            amount01: Number(sheetData[i]?.[2] === undefined?0:isNaN(Number(sheetData[i]?.[2]))?0:sheetData[i]?.[2]%10 === 0?sheetData[i]?.[2]:sheetData[i]?.[2].toFixed(2)),
                            amount02: Number(sheetData[i]?.[3] === undefined?0:isNaN(Number(sheetData[i]?.[3]))?0:sheetData[i]?.[3]%10 === 0?sheetData[i]?.[3]:sheetData[i]?.[3].toFixed(2)),
                            amount03: Number(sheetData[i]?.[4] === undefined?0:isNaN(Number(sheetData[i]?.[4]))?0:sheetData[i]?.[4]%10 === 0?sheetData[i]?.[4]:sheetData[i]?.[4].toFixed(2)),
                            amount04: Number(sheetData[i]?.[5] === undefined?0:isNaN(Number(sheetData[i]?.[5]))?0:sheetData[i]?.[5]%10 === 0?sheetData[i]?.[5]:sheetData[i]?.[5].toFixed(2)),
                            amount05: Number(sheetData[i]?.[6] === undefined?0:isNaN(Number(sheetData[i]?.[6]))?0:sheetData[i]?.[6]%10 === 0?sheetData[i]?.[6]:sheetData[i]?.[6].toFixed(2)),
                            amount06: Number(sheetData[i]?.[7] === undefined?0:isNaN(Number(sheetData[i]?.[7]))?0:sheetData[i]?.[7]%10 === 0?sheetData[i]?.[7]:sheetData[i]?.[7].toFixed(2)),
                            amount07: Number(sheetData[i]?.[8] === undefined?0:isNaN(Number(sheetData[i]?.[8]))?0:sheetData[i]?.[8]%10 === 0?sheetData[i]?.[8]:sheetData[i]?.[8].toFixed(2)),
                            amount08: Number(sheetData[i]?.[9] === undefined?0:isNaN(Number(sheetData[i]?.[9]))?0:sheetData[i]?.[9]%10 === 0?sheetData[i]?.[9]:sheetData[i]?.[9].toFixed(2)),
                            amount09: Number(sheetData[i]?.[10] === undefined?0:isNaN(Number(sheetData[i]?.[10]))?0:sheetData[i]?.[10]%10 === 0?sheetData[i]?.[10]:sheetData[i]?.[10].toFixed(2)),
                            amount10: Number(sheetData[i]?.[11] === undefined?0:isNaN(Number(sheetData[i]?.[11]))?0:sheetData[i]?.[11]%10 === 0?sheetData[i]?.[11]:sheetData[i]?.[11].toFixed(2)),
                            amount11: Number(sheetData[i]?.[12] === undefined?0:isNaN(Number(sheetData[i]?.[12]))?0:sheetData[i]?.[12]%10 === 0?sheetData[i]?.[12]:sheetData[i]?.[12].toFixed(2)),
                            amount12: Number(sheetData[i]?.[13] === undefined?0:isNaN(Number(sheetData[i]?.[13]))?0:sheetData[i]?.[13]%10 === 0?sheetData[i]?.[13]:sheetData[i]?.[13].toFixed(2)),
                            year: Number(sheetData[i]?.[1]),
                          },
                        ];
                        return newFileList;
                      });
                    } else {
                      console.log("have data")
                      const lenghtFilter = listData.filter(
                        (items) => items.year === sheetData[i]?.[1]
                      );
                      //console.log(lenghtFilter)
                      if (lenghtFilter.length === 0) {
                        console.log("Add new Year");
                        setAllowcatedEnergyList((prevEnergyList) => {
                          console.log("prevFileList", prevEnergyList);
                          let newFileList = [
                            ...prevEnergyList,
                            {
                              allocateType: "CUSTOM",
                              amount01: Number(sheetData[i]?.[2] === undefined?0:isNaN(Number(sheetData[i]?.[2]))?0:sheetData[i]?.[2]%10 === 0?sheetData[i]?.[2]:sheetData[i]?.[2].toFixed(2)),
                              amount02: Number(sheetData[i]?.[3] === undefined?0:isNaN(Number(sheetData[i]?.[3]))?0:sheetData[i]?.[3]%10 === 0?sheetData[i]?.[3]:sheetData[i]?.[3].toFixed(2)),
                              amount03: Number(sheetData[i]?.[4] === undefined?0:isNaN(Number(sheetData[i]?.[4]))?0:sheetData[i]?.[4]%10 === 0?sheetData[i]?.[4]:sheetData[i]?.[4].toFixed(2)),
                              amount04: Number(sheetData[i]?.[5] === undefined?0:isNaN(Number(sheetData[i]?.[5]))?0:sheetData[i]?.[5]%10 === 0?sheetData[i]?.[5]:sheetData[i]?.[5].toFixed(2)),
                              amount05: Number(sheetData[i]?.[6] === undefined?0:isNaN(Number(sheetData[i]?.[6]))?0:sheetData[i]?.[6]%10 === 0?sheetData[i]?.[6]:sheetData[i]?.[6].toFixed(2)),
                              amount06: Number(sheetData[i]?.[7] === undefined?0:isNaN(Number(sheetData[i]?.[7]))?0:sheetData[i]?.[7]%10 === 0?sheetData[i]?.[7]:sheetData[i]?.[7].toFixed(2)),
                              amount07: Number(sheetData[i]?.[8] === undefined?0:isNaN(Number(sheetData[i]?.[8]))?0:sheetData[i]?.[8]%10 === 0?sheetData[i]?.[8]:sheetData[i]?.[8].toFixed(2)),
                              amount08: Number(sheetData[i]?.[9] === undefined?0:isNaN(Number(sheetData[i]?.[9]))?0:sheetData[i]?.[9]%10 === 0?sheetData[i]?.[9]:sheetData[i]?.[9].toFixed(2)),
                              amount09: Number(sheetData[i]?.[10] === undefined?0:isNaN(Number(sheetData[i]?.[10]))?0:sheetData[i]?.[10]%10 === 0?sheetData[i]?.[10]:sheetData[i]?.[10].toFixed(2)),
                              amount10: Number(sheetData[i]?.[11] === undefined?0:isNaN(Number(sheetData[i]?.[11]))?0:sheetData[i]?.[11]%10 === 0?sheetData[i]?.[11]:sheetData[i]?.[11].toFixed(2)),
                              amount11: Number(sheetData[i]?.[12] === undefined?0:isNaN(Number(sheetData[i]?.[12]))?0:sheetData[i]?.[12]%10 === 0?sheetData[i]?.[12]:sheetData[i]?.[12].toFixed(2)),
                              amount12: Number(sheetData[i]?.[13] === undefined?0:isNaN(Number(sheetData[i]?.[13]))?0:sheetData[i]?.[13]%10 === 0?sheetData[i]?.[13]:sheetData[i]?.[13].toFixed(2)),
                              year: Number(sheetData[i]?.[1]),
                            },
                          ];
                          return newFileList;
                        });
                      } else {
                        console.log("Update Old Data");
                        const indexFilterList = listData.findIndex(
                          (items) => items.year === sheetData[i]?.[1]
                        );
                        
                        const listTempData = listData;
                        //console.log("List Old",listTempData[indexFilterList])
                        
                        listTempData[indexFilterList] = {
                            allocateType: "CUSTOM",
                            amount01: Number(sheetData[i]?.[2] === undefined?0:isNaN(Number(sheetData[i]?.[2]))?0:sheetData[i]?.[2]%10 === 0?sheetData[i]?.[2]:sheetData[i]?.[2].toFixed(2)),
                            amount02: Number(sheetData[i]?.[3] === undefined?0:isNaN(Number(sheetData[i]?.[3]))?0:sheetData[i]?.[3]%10 === 0?sheetData[i]?.[3]:sheetData[i]?.[3].toFixed(2)),
                            amount03: Number(sheetData[i]?.[4] === undefined?0:isNaN(Number(sheetData[i]?.[4]))?0:sheetData[i]?.[4]%10 === 0?sheetData[i]?.[4]:sheetData[i]?.[4].toFixed(2)),
                            amount04: Number(sheetData[i]?.[5] === undefined?0:isNaN(Number(sheetData[i]?.[5]))?0:sheetData[i]?.[5]%10 === 0?sheetData[i]?.[5]:sheetData[i]?.[5].toFixed(2)),
                            amount05: Number(sheetData[i]?.[6] === undefined?0:isNaN(Number(sheetData[i]?.[6]))?0:sheetData[i]?.[6]%10 === 0?sheetData[i]?.[6]:sheetData[i]?.[6].toFixed(2)),
                            amount06: Number(sheetData[i]?.[7] === undefined?0:isNaN(Number(sheetData[i]?.[7]))?0:sheetData[i]?.[7]%10 === 0?sheetData[i]?.[7]:sheetData[i]?.[7].toFixed(2)),
                            amount07: Number(sheetData[i]?.[8] === undefined?0:isNaN(Number(sheetData[i]?.[8]))?0:sheetData[i]?.[8]%10 === 0?sheetData[i]?.[8]:sheetData[i]?.[8].toFixed(2)),
                            amount08: Number(sheetData[i]?.[9] === undefined?0:isNaN(Number(sheetData[i]?.[9]))?0:sheetData[i]?.[9]%10 === 0?sheetData[i]?.[9]:sheetData[i]?.[9].toFixed(2)),
                            amount09: Number(sheetData[i]?.[10] === undefined?0:isNaN(Number(sheetData[i]?.[10]))?0:sheetData[i]?.[10]%10 === 0?sheetData[i]?.[10]:sheetData[i]?.[10].toFixed(2)),
                            amount10: Number(sheetData[i]?.[11] === undefined?0:isNaN(Number(sheetData[i]?.[11]))?0:sheetData[i]?.[11]%10 === 0?sheetData[i]?.[11]:sheetData[i]?.[11].toFixed(2)),
                            amount11: Number(sheetData[i]?.[12] === undefined?0:isNaN(Number(sheetData[i]?.[12]))?0:sheetData[i]?.[12]%10 === 0?sheetData[i]?.[12]:sheetData[i]?.[12].toFixed(2)),
                            amount12: Number(sheetData[i]?.[13] === undefined?0:isNaN(Number(sheetData[i]?.[13]))?0:sheetData[i]?.[13]%10 === 0?sheetData[i]?.[13]:sheetData[i]?.[13].toFixed(2)),
                            year: Number(sheetData[i]?.[1]),
                        };
                        setAllowcatedEnergyList(listTempData);
                      }
                    }
                  }
                  else{
                    setIsShowFailModal(true)
                    setMessageFailModal("Please check file data again have year is duplicate.")
                    setAllowcatesExcelfileList([])
                    setTumbFile([]);
                    onCloseModal();
                    break;
                  }
                }
              }
            /*sheetData.map((item, index) => {
            if (index >= 2) {
              console.log("Items", item);
                if (listData.length === 0) {
                  console.log("Add new");
                  console.log("Items : ",item[2])
                  setAllowcatedEnergyList((prevEnergyList) => {
                    console.log("prevFileList", prevEnergyList);
                    let newFileList = [
                      ...prevEnergyList,
                      {
                        
                        allocateType: "CUSTOM",
                        amount01: Number(item[2] === undefined?0:isNaN(Number(item[2]))?0:item[2]%10 === 0?item[2]:item[2].toFixed(2)),
                        amount02: Number(item[3] === undefined?0:isNaN(Number(item[3]))?0:item[3]%10 === 0?item[3]:item[3].toFixed(2)),
                        amount03: Number(item[4] === undefined?0:isNaN(Number(item[4]))?0:item[4]%10 === 0?item[4]:item[4].toFixed(2)),
                        amount04: Number(item[5] === undefined?0:isNaN(Number(item[5]))?0:item[5]%10 === 0?item[5]:item[5].toFixed(2)),
                        amount05: Number(item[6] === undefined?0:isNaN(Number(item[6]))?0:item[6]%10 === 0?item[6]:item[6].toFixed(2)),
                        amount06: Number(item[7] === undefined?0:isNaN(Number(item[7]))?0:item[7]%10 === 0?item[7]:item[7].toFixed(2)),
                        amount07: Number(item[8] === undefined?0:isNaN(Number(item[8]))?0:item[8]%10 === 0?item[8]:item[8].toFixed(2)),
                        amount08: Number(item[9] === undefined?0:isNaN(Number(item[9]))?0:item[9]%10 === 0?item[9]:item[9].toFixed(2)),
                        amount09: Number(item[10] === undefined?0:isNaN(Number(item[10]))?0:item[10]%10 === 0?item[10]:item[10].toFixed(2)),
                        amount10: Number(item[11] === undefined?0:isNaN(Number(item[11]))?0:item[11]%10 === 0?item[11]:item[11].toFixed(2)),
                        amount11: Number(item[12] === undefined?0:isNaN(Number(item[12]))?0:item[12]%10 === 0?item[12]:item[12].toFixed(2)),
                        amount12: Number(item[13] === undefined?0:isNaN(Number(item[13]))?0:item[13]%10 === 0?item[13]:item[13].toFixed(2)),
                        year: Number(item[1]),
                      },
                    ];
                    return newFileList;
                  });
                } else {
                  console.log("have data")
                  const lenghtFilter = listData.filter(
                    (items) => items.year === item[1]
                  );
                  //console.log(lenghtFilter)
                  if (lenghtFilter.length === 0) {
                    console.log("Add new Year");
                    setAllowcatedEnergyList((prevEnergyList) => {
                      console.log("prevFileList", prevEnergyList);
                      let newFileList = [
                        ...prevEnergyList,
                        {
                          allocateType: "CUSTOM",
                          amount01: Number(item[2] === undefined?0:isNaN(Number(item[2]))?0:item[2]%10 === 0?item[2]:item[2].toFixed(2)),
                          amount02: Number(item[3] === undefined?0:isNaN(Number(item[3]))?0:item[3]%10 === 0?item[3]:item[3].toFixed(2)),
                          amount03: Number(item[4] === undefined?0:isNaN(Number(item[4]))?0:item[4]%10 === 0?item[4]:item[4].toFixed(2)),
                          amount04: Number(item[5] === undefined?0:isNaN(Number(item[5]))?0:item[5]%10 === 0?item[5]:item[5].toFixed(2)),
                          amount05: Number(item[6] === undefined?0:isNaN(Number(item[6]))?0:item[6]%10 === 0?item[6]:item[6].toFixed(2)),
                          amount06: Number(item[7] === undefined?0:isNaN(Number(item[7]))?0:item[7]%10 === 0?item[7]:item[7].toFixed(2)),
                          amount07: Number(item[8] === undefined?0:isNaN(Number(item[8]))?0:item[8]%10 === 0?item[8]:item[8].toFixed(2)),
                          amount08: Number(item[9] === undefined?0:isNaN(Number(item[9]))?0:item[9]%10 === 0?item[9]:item[9].toFixed(2)),
                          amount09: Number(item[10] === undefined?0:isNaN(Number(item[10]))?0:item[10]%10 === 0?item[10]:item[10].toFixed(2)),
                          amount10: Number(item[11] === undefined?0:isNaN(Number(item[11]))?0:item[11]%10 === 0?item[11]:item[11].toFixed(2)),
                          amount11: Number(item[12] === undefined?0:isNaN(Number(item[12]))?0:item[12]%10 === 0?item[12]:item[12].toFixed(2)),
                          amount12: Number(item[13] === undefined?0:isNaN(Number(item[13]))?0:item[13]%10 === 0?item[13]:item[13].toFixed(2)),
                          year: Number(item[1]),
                        },
                      ];
                      return newFileList;
                    });
                  } else {
                    console.log("Update Old Data");
                    const indexFilterList = listData.findIndex(
                      (items) => items.year === item[1]
                    );
                    
                    const listTempData = listData;
                    //console.log("List Old",listTempData[indexFilterList])
                    
                    listTempData[indexFilterList] = {
                      allocateType: "CUSTOM",
                      amount01: Number(item[2] === undefined?0:isNaN(Number(item[2]))?0:item[2]%10 === 0?item[2]:item[2].toFixed(2)),
                      amount02: Number(item[3] === undefined?0:isNaN(Number(item[3]))?0:item[3]%10 === 0?item[3]:item[3].toFixed(2)),
                      amount03: Number(item[4] === undefined?0:isNaN(Number(item[4]))?0:item[4]%10 === 0?item[4]:item[4].toFixed(2)),
                      amount04: Number(item[5] === undefined?0:isNaN(Number(item[5]))?0:item[5]%10 === 0?item[5]:item[5].toFixed(2)),
                      amount05: Number(item[6] === undefined?0:isNaN(Number(item[6]))?0:item[6]%10 === 0?item[6]:item[6].toFixed(2)),
                      amount06: Number(item[7] === undefined?0:isNaN(Number(item[7]))?0:item[7]%10 === 0?item[7]:item[7].toFixed(2)),
                      amount07: Number(item[8] === undefined?0:isNaN(Number(item[8]))?0:item[8]%10 === 0?item[8]:item[8].toFixed(2)),
                      amount08: Number(item[9] === undefined?0:isNaN(Number(item[9]))?0:item[9]%10 === 0?item[9]:item[9].toFixed(2)),
                      amount09: Number(item[10] === undefined?0:isNaN(Number(item[10]))?0:item[10]%10 === 0?item[10]:item[10].toFixed(2)),
                      amount10: Number(item[11] === undefined?0:isNaN(Number(item[11]))?0:item[11]%10 === 0?item[11]:item[11].toFixed(2)),
                      amount11: Number(item[12] === undefined?0:isNaN(Number(item[12]))?0:item[12]%10 === 0?item[12]:item[12].toFixed(2)),
                      amount12: Number(item[13] === undefined?0:isNaN(Number(item[13]))?0:item[13]%10 === 0?item[13]:item[13].toFixed(2)),
                      year: Number(item[1]),
                    };
                    setAllowcatedEnergyList(listTempData);
                  }
                }
            }
            });*/
            setTumbFile([]);
            onCloseModal();
            }
            else{
              //message.error("Please check file data is not match and try again.")
              setIsShowFailModal(true)
              setMessageFailModal("Please check file data is not match and try again.")
              setAllowcatesExcelfileList([])
              setTumbFile([]);
              onCloseModal();
            }
        }
        else{
          //message.error("Please check file data again year is empty.")
          setIsShowFailModal(true)
          setMessageFailModal("Please check file data again year is empty.")
          setAllowcatesExcelfileList([])
          setTumbFile([]);
          onCloseModal();
        }
        
      }
      else{
        //message.error("Please check file data is not match and try again.")
        setIsShowFailModal(true)
        setMessageFailModal("Please check file data is not match and try again.")
        setAllowcatesExcelfileList([])
        setTumbFile([]);
        onCloseModal();
      }
    } else {
      //message.error("This file didn't have data to add.");
      setIsShowFailModal(true)
      setMessageFailModal("This file didn't have data to add.")
    }
  };

  const checkCreate=(data)=>{
    console.log("Come to function check")
      const diffYear = (yearEnd-yearStart)+1
      const lengthData = data.length-2
      console.log("Data",data)
      const lengthCreateStartyear = data.filter((items)=> items[1] === yearStart)
      const lenghtCreateEndyear = data.filter((items)=>items[1] === yearEnd)
      console.log("Diff Year",diffYear)
      console.log("Data length",lengthData)
      console.log(lengthCreateStartyear.length)
      console.log(lenghtCreateEndyear.length)

      if(lengthCreateStartyear.length !== 0){
        console.log("Have Start Year")
        if(lenghtCreateEndyear.length !== 0){
          console.log("Have End Year")
          if(lengthData < diffYear){
            console.log("Length is not match")
            setIsShowFailModal(true)
            setMessageFailModal("Data upload file is not match with Retail ESA Contract Start Date and Retail ESA Contract End Date")
          }
        }
        else{
          console.log("Dont have end")
            setIsShowFailModal(true)
            setMessageFailModal("Data upload file is not match with Retail ESA Contract Start Date and Retail ESA Contract End Date")
        }
      }
      else{
        console.log("Dont have start")
        setIsShowFailModal(true)
        setMessageFailModal("Data upload file is not match with Retail ESA Contract Start Date and Retail ESA Contract End Date")
      }
  }

  const getButtonColor = () => {
    switch (buttonTypeColor) {
      case "primary":
        return "bg-[#87BE33]";
      case "danger":
        return "bg-[#EF4835]";

      default:
        return "bg-[#87BE33]";
    }
  };
  function generateGUID() {
    return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(
      /[xy]/g,
      function (c) {
        const r = (Math.random() * 16) | 0,
          v = c === "x" ? r : (r & 0x3) | 0x8;
        return v.toString(16);
      }
    );
  }

  const handleUploadfileExcel = async (id, result) => {
    // console.log("fileJaa>>>",file)
    console.log("Result", result);
    console.log("----Excel FIle---", allowcatedExcelFileList);
    console.log("Lenght Excel", allowcatedExcelFileList.length);
    console.log(id);
    const reader = new FileReader();
    reader.onload = function (e) {
      const arrayBuffer = e.target.result;
      
      console.log("Binary data as ArrayBuffer:", arrayBuffer);
      const base64Content = arrayBuffer.split(",")[1];
      console.log(base64Content)
      let guid = generateGUID();
      setTumbFile((prevFileList) => {
        console.log("prevFileList", prevFileList);
        let newFileList = [
          ...prevFileList,
          {
            guid: "",
            name: result?.name,
            size: result?.size,
            type: result?.type,
            binary: base64Content,
          },
        ];
        return newFileList;
      });
    };

    console.log(allowcatedExcelFileList);

    let bi = reader.readAsDataURL(result);

    /*console.log("id", id);
        console.log("res", result);
        console.log("file=>>", result?.res["@id"]);
    
        setFileListExcel((prevFileList) => {
          console.log("prevFileList", prevFileList);
          let newFileList = [
            ...prevFileList,
            { fileID: result?.res?.uid, evidentFileID: result?.res["@id"] },
          ];
          return newFileList;
        });*/
  };

  const handleDeleteFileExcel = (id, evidentFileID, fileName) => {
    // console.log('id>>',id)
    console.log("evidentFileID>>", evidentFileID);
    /*setAllowcatesExcelfileList((prevFileList) => {
      console.log("prevFileList", prevFileList);
      let newFileList = prevFileList.filter(
        (item) => item.name !== evidentFileID
      );
      return newFileList;
    });*/
    setTumbFile([])
  };

  const handleClickDownloadFileExcel = async (item) => {
    // console.log('item',item)
    // console.log('item evidentFileID',item?.evidentFileID)
    // console.log('item name',item?.name)
    try {
      // setIsOpenLoading(true);
      showLoading();
      console.log("Download File");
      const fileID = item?.guid;
      const fileName = item?.name;
      const binary = item?.binary;
      const requestParameter = {
        fileID: fileID,
        fileName: fileName,
      };
      //const response = await FetchDownloadFile(requestParameter);

      //const blob = new Blob([response.res.data], {
      //type: response.res.headers["content-type"],
      //});
      // Create a download link
      //const url = window.URL.createObjectURL(blob);
      //const a = document.createElement("a");
      //a.href = url;
      //a.download = fileName;
      //document.body.appendChild(a);
      //a.click();
      //document.body.removeChild(a);
      //window.URL.revokeObjectURL(url);
    } catch (error) {
      //  console.error("Error downloading file:", error);
    }
    hideLoading();
    // setIsOpenLoading(false);
  };

  return (
    <Modal
      size="xl"
      opened={true}
      onClose={() => onClickOk && onClickOk(false)}
      withCloseButton={false}
      closeOnClickOutside={false}
      centered
    >
      {/* <div className="pt-4 px-4 pb-2">
        <h6 className="text-PRIMARY_TEXT font-semibold">
          Allocated energy amount
        </h6>
        </div>*/}
      <Controller
        name="uploadFileExcel"
        control={control}
        rules={{
          required: "This field is required",
        }}
        render={({ field }) => (
          <UploadFileSubscriber
            {...field}
            id={"uploadFileExcel"}
            type={"file"}
            multiple={false}
            accept={".xls,.xlsx"}
            label={"Allocated energy amount"}
            onChngeInput={(id, res) => {
              handleUploadfileExcel(id, res);
            }}
            onDeleteFile={(id, evidentFileID, fileName) => {
              handleDeleteFileExcel(id, evidentFileID, fileName);
            }}
            onClickFile={(item) => {
              handleClickDownloadFileExcel(item);
            }}
            error={errors.uploadFileExcel}
            validate={" *"}
            disabled={tumbFile.length !== 0 ?true:false}
            // ... other props
          />
        )}
      />
      <div className="grow bg-lime-200 mt-2 w-full">
        <div className="flex justify-content items-center">
          <div className="mr-8"></div>
          <label className="text-sm font-normal">
            Download Template File :
          </label>
          <div>
            <label
              style={{ cursor: "pointer", color: "blue" }}
              className="text-sm font-normal ml-1"
              onClick={downloadTemplateFile}
            >
              {templateFile.name}
            </label>
          </div>
        </div>
      </div>
      <div className="flex justify-center gap-3 p-2 mt-4">
        <button
          onClick={onCloseModal}
          className="w-25 rounded shadow-sm px-4 py-2 font-normal bg-[#EFEFEF] hover:bg-[#78829D] hover:text-white"
        >
          Cancel
        </button>
        <button
          onClick={handleSubmit(onClickOk)}
          className={`${getButtonColor()} w-25 rounded shadow-sm px-4 py-2 font-semibold text-white sm:text-sm hover:bg-[#4D6A00] `}
        >
          Import
        </button>
      </div>
    </Modal>
  );
}
